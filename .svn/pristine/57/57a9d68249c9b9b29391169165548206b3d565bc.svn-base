package mysql;

import common.Grades;
import database.SQLUtility;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Collection;
import java.util.LinkedList;
import java.util.logging.Level;
import utilities.WebErrorLogger;

/**
 * Represents a manager for the <code>Grades</code> object, which 
 * implements the <code>GradesManager</code> interface.
 * 
 * @author Gryphon Ayers (2019)
 */
public class GradesManager implements database.GradesManager {

    @Override
    public Grades getGrades(int gradesID) {
        String sql = "SELECT * from grades where gradesID = ?;";
        Connection conn = mysql.Web_MYSQL_Helper.getConnection();
        ResultSet rs;
        Grades grade;
        PreparedStatement stmt2 = null;
        try {
            stmt2 = conn.prepareStatement(sql);
            stmt2.setInt(1, gradesID);

            rs = stmt2.executeQuery();
            if (rs == null || rs.next() == false) {
                Web_MYSQL_Helper.closePreparedStatement(stmt2);
                Web_MYSQL_Helper.returnConnection(conn);
                return null;
            }
            grade = SQLUtility.convertResultSetToGrades(rs);
            
            rs.close();

        } catch (SQLException ex) {
            WebErrorLogger.log(Level.SEVERE, "SQLException in getGrades(int gradesID) "
                    + "gradesID="+gradesID + " error: " + ex);
            Web_MYSQL_Helper.closePreparedStatement(stmt2);
            Web_MYSQL_Helper.returnConnection(conn);
            return null;
        }
        Web_MYSQL_Helper.closePreparedStatement(stmt2);
        Web_MYSQL_Helper.returnConnection(conn);
        return grade;
    }

    @Override
    public Collection<Grades> getGradesByUserID(int userID) {
        String sql = "SELECT * from grades where instructor = ?;";
        Connection conn = mysql.Web_MYSQL_Helper.getConnection();
        ResultSet rs;
        LinkedList<Grades> grades = new LinkedList<>();
        PreparedStatement stmt2 = null;
        try {
            stmt2 = conn.prepareStatement(sql);
            stmt2.setInt(1, userID);

            rs = stmt2.executeQuery();
            if (rs == null || rs.next() == false) {
                Web_MYSQL_Helper.closePreparedStatement(stmt2);
                Web_MYSQL_Helper.returnConnection(conn);
                return null;
            }
            while(rs.next()) {
                Grades g = SQLUtility.convertResultSetToGrades(rs);
                grades.add(g);
            }
            
            rs.close();

        } catch (SQLException ex) {
            WebErrorLogger.log(Level.SEVERE, "SQLException in getGradesByUserID(int userID) "
                    + "user="+userID + " error: " + ex);
            Web_MYSQL_Helper.closePreparedStatement(stmt2);
            Web_MYSQL_Helper.returnConnection(conn);
            return null;
        }
        Web_MYSQL_Helper.closePreparedStatement(stmt2);
        Web_MYSQL_Helper.returnConnection(conn);
        return grades;
    }

    @Override
    public boolean insertGrades(Grades grades) {
        String sql = "INSERT INTO `Tenure`.`grades` "
                + "(`semester`, `year`, `course`, "
                + "`section`, `instructor`, `gradeA`, `gradeAminus`, "
                + "`gradeBplus`, `gradeB`, `gradeBminus`, `gradeCplus`, "
                + "`gradeC`, `gradeCminus`, `gradeDplus`, `gradeD`, "
                + "`gradeF`, `gradeR`, `gradeW`) "
                + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);";
        Connection conn = mysql.Web_MYSQL_Helper.getConnection();
        PreparedStatement stmt2 = null;
        boolean returnValue;
        try {
            stmt2 = conn.prepareStatement(sql);
            stmt2.setString(1, grades.getSemester());
            stmt2.setShort(2, grades.getYear());
            stmt2.setInt(3, grades.getCourse());
            stmt2.setString(4, grades.getSection());
            stmt2.setInt(5, grades.getInstructor());
            
            int[] gradeData = grades.getGradeData();
            for(int i = 0; i < Grades.GRADE_DATA_COLUMN_COUNT; i++) {
                stmt2.setInt(Grades.GRADE_DATA_COLUMN_OFFSET+i, gradeData[i]);
            }
            returnValue = stmt2.executeUpdate() > 0;
            
            Web_MYSQL_Helper.closePreparedStatement(stmt2);
            Web_MYSQL_Helper.returnConnection(conn);
        } catch (SQLException ex) {
            WebErrorLogger.log(Level.SEVERE, "SQLException in insertGrades(Grades grades) " + ex);
            Web_MYSQL_Helper.closePreparedStatement(stmt2);
            Web_MYSQL_Helper.returnConnection(conn);
            return false;
        }
        Web_MYSQL_Helper.closePreparedStatement(stmt2);
        Web_MYSQL_Helper.returnConnection(conn);
        
        return returnValue;
    }

    @Override
    public boolean updateGrades(Grades grades) {
        String sql = "UPDATE grades SET "
                + "semester=? year=? course=? section=? instructor=? "
                + "gradeA=? gradeAminus=? gradeBplus=? gradeB=? gradeBminus=? "
                + "gradeCplus=? gradeC=? gradeCminus=? gradeDplus=? gradeD=? "
                + "gradeF=? gradeR=? gradeW=? WHERE gradesID = ?;";
        Connection conn = mysql.Web_MYSQL_Helper.getConnection();
        PreparedStatement stmt2 = null;
        boolean returnValue;
        try {
            stmt2 = conn.prepareStatement(sql);
            stmt2.setString(2, grades.getSemester());
            stmt2.setShort(3, grades.getYear());
            stmt2.setInt(4, grades.getCourse());
            stmt2.setString(5, grades.getSection());
            stmt2.setInt(6, grades.getInstructor());
            
            int[] gradeData = grades.getGradeData();
            for(int i = 0; i < Grades.GRADE_DATA_COLUMN_COUNT; i++) {
                stmt2.setInt(Grades.GRADE_DATA_COLUMN_OFFSET+i, gradeData[i]);
            }
            returnValue = stmt2.executeUpdate() > 0;
            
            Web_MYSQL_Helper.closePreparedStatement(stmt2);
            Web_MYSQL_Helper.returnConnection(conn);
        } catch (SQLException ex) {
            WebErrorLogger.log(Level.SEVERE, "SQLException in updateGrades(Grades grades) " + ex);
            Web_MYSQL_Helper.closePreparedStatement(stmt2);
            Web_MYSQL_Helper.returnConnection(conn);
            return false;
        }
        Web_MYSQL_Helper.closePreparedStatement(stmt2);
        Web_MYSQL_Helper.returnConnection(conn);
        
        return returnValue;
    }

    @Override
    public Collection<Grades> getAllGrades() {
        String sql = "SELECT * from grades;";
        Connection conn = mysql.Web_MYSQL_Helper.getConnection();
        ResultSet rs;
        LinkedList<Grades> grades = new LinkedList<>();
        Statement stmt = null;
        try {
            stmt = conn.createStatement();

            rs = stmt.executeQuery(sql);
            if (rs == null || rs.next() == false) {
                Web_MYSQL_Helper.closeStatement(stmt);
                Web_MYSQL_Helper.returnConnection(conn);
                return null;
            }
            while(rs.next()) {
                Grades g = SQLUtility.convertResultSetToGrades(rs);
                grades.add(g);
            }
            
            rs.close();

        } catch (SQLException ex) {
            WebErrorLogger.log(Level.SEVERE, "SQLException in getAllGrades() "
                    + " error: " + ex);
            Web_MYSQL_Helper.closeStatement(stmt);
            Web_MYSQL_Helper.returnConnection(conn);
            return null;
        }
        Web_MYSQL_Helper.closeStatement(stmt);
        Web_MYSQL_Helper.returnConnection(conn);
        return grades;
    }
    
}
