<?xml version="1.0" encoding="UTF-8"?>
    <Configuration status="WARN" name="BU Login" packages="">
        <!-- https://logging.apache.org/log4j/2.x/manual/configuration.html -->
        <Properties>
            <Property name="LOG_DIR">WEB-INF/logs</Property>
            <Property name="FILE_NAME">${LOG_DIR}/Error.log</Property>
            <Property name="ARCHIVE">${LOG_DIR}/archive</Property>
            <Property name="PATTERN">%-5level %d [%t] %c:%M(%L): %m%n%ex{2}%n%n</Property>
        </Properties>
      <Appenders>
        <File name="ErrorLogFile" 
            fileName="WEB-INF/logs/Error.log"
            append = "true" createOnDemand="true" >
            <PatternLayout>
                <!-- 
                fileName="${FILE_NAME}" could have been used above
                   The first pattern does not have the level, the method name 
                   nor the line number
                   in the output. The second pattern shows how to use the pattern 
                   specified above. It has the level, the method name and 
                   the line number included as part of the output. 
                --> 
                <!-- <Pattern>%d %p %c{1.} [%t] %m%n</Pattern> -->
                <Pattern>${PATTERN}</Pattern> 
            </PatternLayout>
        </File>
        
       	<JDBC name="databaseAppender" tableName="error_logs">
            <DataSource jndiName="java:/comp/env/jdbc/mysql/Tenure" />
            <Column name="EVENT_DATE" isEventTimestamp="true" />
            <Column name="LEVEL" pattern="%level" />
            <Column name="LOGGER" pattern="%logger" />
            <Column name="MSG" pattern="%message" />
            <Column name="THROWABLE" pattern="%ex{1}" />
	</JDBC>
        
      </Appenders>
      <Loggers>
        <Root level="warn">
            <!--
            Comment out the ErrorLogFile appender
            when on the production server. If not, then make sure you can
            write files to the location specified
            The databaseAppender would be best for production code. 
            The level should be set to error or warning in production code. 
            Can be debug in testing mode
            Consider having the method name as part of the message so %M is 
            not needed. 
             -->
       <!--   <AppenderRef ref="ErrorLogFile"/> --><!-- Comment out in production -->
          <AppenderRef ref="databaseAppender"/> <!-- Should comment out during testing --> 
        </Root>
      </Loggers>
      <!--
        CREATE TABLE IF NOT EXISTS error_logs (
            `EVENT_ID` int(11) NOT NULL AUTO_INCREMENT,
            `EVENT_DATE` datetime DEFAULT NULL,
            `LEVEL` varchar(15) DEFAULT NULL,
            `LOGGER` varchar(45) DEFAULT NULL,
            `MSG` varchar(260) DEFAULT NULL,
            `THROWABLE` varchar(260) DEFAULT NULL,
            PRIMARY KEY (`EVENT_ID`)
        ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
      
      -->
    </Configuration>
